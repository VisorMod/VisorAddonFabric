plugins {
    id 'java'
    alias(libs.plugins.fabricLoom)
    alias(libs.plugins.shadow)
}

group = 'me.phoenixra'
version = '1.0.0-SNAPSHOT'

repositories {
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven { url 'https://jitpack.io' }

    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://libraries.minecraft.net/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url = "https://maven.parchmentmc.org" }

    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    minecraft "com.mojang:minecraft:${libs.versions.minecraftVersion.get()}"
    mappings "net.fabricmc:yarn:${libs.versions.yarnMappings.get()}:v2"

    modImplementation(libs.fabric.loader)


    modApi("com.github.VisorMod.Visor:fabric:0.1.0-pre16")


    compileOnly(libs.bundles.annotations)
    annotationProcessor(libs.bundles.annotations)
}
configurations {
    shade {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom implementation
    }
}

shadowJar {
    configurations = [ project.configurations.shade ]
    archiveClassifier.set('dev')
}



// ----- REMAP SHADOW JAR & ACCESS-WIDENER REMAPPING -----

tasks.named('remapJar') {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)
    archiveClassifier.set('')
}

tasks.build {
    dependsOn tasks.named('remapJar')
}

tasks.processResources {
    inputs.property 'version', project.version
    filesMatching("fabric.mod.json") {
        expand(version: project.version)
    }
}

compileJava {
    dependsOn clean
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
